# === Real Robot envs
NeckGoalEnvRelativeSparse-v2:
  model_class: 'sac'
  # env_wrapper:
  #   - utils.wrappers.HistoryWrapper:
  #       horizon: 2
  #   - utils.wrappers.TimeFeatureWrapper
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  learning_rate: !!float 7.3e-4
  buffer_size: 100000
  batch_size: 256
  ent_coef: 'auto'
  gamma: 0.99
  tau: 0.02
  n_episodes_rollout: 1
  gradient_steps: -1
  train_freq: -1
  # 10 episodes of warm-up
  learning_starts: 1500
  use_sde_at_warmup: True
  use_sde: True
  sde_sample_freq: 64
  policy_kwargs: "dict(log_std_init=-2, net_arch=[256, 256])"
  n_sampled_goal: 4
  goal_selection_strategy: 'future'
  online_sampling: False

NeckGoalEnvRelativeDense-v2:
  model_class: 'sac'
  env_wrapper:
    - utils.wrappers.HistoryWrapperObsDict:
        horizon: 2
  #   - utils.wrappers.TimeFeatureWrapper
  n_timesteps: !!float 1e6
  policy: 'MlpPolicy'
  learning_rate: !!float 7.3e-4
  buffer_size: 200000
  batch_size: 256
  ent_coef: 'auto'
  gamma: 0.99
  tau: 0.02
  n_episodes_rollout: 1
  gradient_steps: -1
  train_freq: -1
  # 10 episodes of warm-up
  learning_starts: 1500
  use_sde_at_warmup: True
  use_sde: True
  sde_sample_freq: 64
  policy_kwargs: "dict(log_std_init=-2, net_arch=[256, 256])"
  n_sampled_goal: 4
  goal_selection_strategy: 'future'
  online_sampling: False

# DDPG hyperparams
#parking-v0:
#  n_timesteps: !!float 2e5
#  policy: 'MlpPolicy'
#  model_class: 'ddpg'
#  n_sampled_goal: 4
#  goal_selection_strategy: 'future'
#  buffer_size: 1000000
#  batch_size: 256
#  gamma: 0.95
#  learning_rate: !!float 1e-3
#  noise_type: 'normal'
#  noise_std: 0.2
#  policy_kwargs: "dict(net_arch=[256, 256, 256])"
#  online_sampling: True

# SAC hyperparams, her paper
parking-v0:
  n_timesteps: !!float 2e5
  policy: 'MlpPolicy'
  model_class: 'sac'
  n_sampled_goal: 4
  goal_selection_strategy: 'future'
  buffer_size: 1000000
  batch_size: 256
  gamma: 0.95
  learning_rate: !!float 1e-3
  # noise_type: 'normal'
  # noise_std: 0.2
  policy_kwargs: "dict(net_arch=[256, 256, 256], log_std_init=-1)"
  online_sampling: True

# TD3 hyperparams, her paper
#parking-v0:
#  n_timesteps: !!float 2e5
#  policy: 'MlpPolicy'
#  model_class: 'td3'
#  n_sampled_goal: 4
#  goal_selection_strategy: 'future'
#  buffer_size: 1000000
#  batch_size: 256
#  gamma: 0.95
#  learning_rate: !!float 1e-3
#  noise_type: 'normal'
#  noise_std: 0.2
#  policy_kwargs: "dict(net_arch=[256, 256, 256])"
#  online_sampling: True
